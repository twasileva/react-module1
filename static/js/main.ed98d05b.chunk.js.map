{"version":3,"sources":["components/EventCard/EventCard.module.css","components/PageTitle/PageTitle.module.css","components/EventBoard/EventBoard.module.css","components/PageTitle/PageTitle.jsx","components/EventCard/EventCard.jsx","utils/formattedData.jsx","utils/durationTime.jsx","components/EventBoard/EventBoard.jsx","components/App.jsx","index.js"],"names":["module","exports","PageTitle","text","className","css","title","EventCard","name","location","speaker","type","start","end","formattedDataStart","format","Date","parse","formattedData","duration","formatDistanceStrict","durationTime","event","info","icon","chip","EventBord","events","eventBoard","map","time","App","upcomingEvents","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,MAAQ,yBAAyB,KAAO,wBAAwB,KAAO,wBAAwB,KAAO,wBAAwB,KAAO,wBAAwB,KAAO,wBAAwB,IAAM,yB,qBCArPD,EAAOC,QAAU,CAAC,MAAQ,2B,gBCA1BD,EAAOC,QAAU,CAAC,WAAa,iC,s+CCGlBC,EAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OACvB,oBAAIC,UAAWC,IAAIC,MAAnB,SAA2BH,K,wDCGhBI,EAAY,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC1DC,ECPqB,SAAAF,GAC3B,OAAOG,YAAOC,KAAKC,MAAML,GAAQ,uBDMRM,CAAcN,GACjCO,EERoB,SAACP,EAAOC,GAClC,OAAOO,YAAqB,IAAIJ,KAAKJ,GAAQ,IAAII,KAAKH,IFOrCQ,CAAaT,EAAOC,GAEvC,OACI,sBAAKT,UAAWC,IAAIiB,MAApB,UACA,oBAAIlB,UAAWC,IAAIC,MAAnB,SAA2BE,IAC7B,oBAAGJ,UAAWC,IAAIkB,KAAlB,UACE,cAAC,IAAD,CAAgBnB,UAAWC,IAAImB,OAC9Bf,KAEH,oBAAGL,UAAWC,IAAIkB,KAAlB,UACE,cAAC,IAAD,CAAWnB,UAAWC,IAAImB,OACzBd,KAEH,oBAAGN,UAAWC,IAAIkB,KAAlB,UACE,cAAC,IAAD,CAAenB,UAAWC,IAAImB,OAC7BV,KAEH,oBAAGV,UAAWC,IAAIkB,KAAlB,UACE,cAAC,IAAD,CAASnB,UAAWC,IAAImB,OACvBL,KAEH,sBAAMf,UAAS,UAAKC,IAAIoB,KAAT,YAAiBpB,IAAIM,IAApC,SAA8CA,QG3BnCe,EAAY,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACzB,OACE,qBAAKvB,UAAWC,IAAIuB,WAApB,SACGD,EAAOE,KAAI,gBAAGrB,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,KAAMmB,EAAlC,EAAkCA,KAAlC,OACV,cAAC,EAAD,CAEEtB,KAAMA,EACNC,SAAUA,EACVC,QAASA,EACTC,KAAMA,EACNC,MAAOkB,EAAKlB,MACZC,IAAKiB,EAAKjB,KANLL,S,QCLFuB,EAAM,kBACjB,qCACE,cAAC,EAAD,CAAW5B,KAAK,0CAChB,cAAC,EAAD,CAAWwB,OAAQK,QCDvBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ed98d05b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"event\":\"EventCard_event__2sm3W\",\"title\":\"EventCard_title__1phO4\",\"info\":\"EventCard_info__Geyd2\",\"icon\":\"EventCard_icon__JalgS\",\"chip\":\"EventCard_chip__nXOKn\",\"free\":\"EventCard_free__2jy55\",\"paid\":\"EventCard_paid__1pSaf\",\"vip\":\"EventCard_vip__3sf3n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PageTitle_title__1T1P4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"eventBoard\":\"EventBoard_eventBoard__3srtT\"};","import PropTypes from 'prop-types'\r\nimport css from './PageTitle.module.css'\r\n\r\n\r\nexport const PageTitle = ({text}) => (\r\n  <h1 className={css.title}>{text}</h1>\r\n)\r\n\r\nPageTitle.propTypes = {\r\n  text:PropTypes.string.isRequired,\r\n}","import PropTypes from 'prop-types'\r\nimport css from './EventCard.module.css'\r\nimport { formattedData } from 'utils/formattedData'\r\nimport { durationTime } from 'utils/durationTime'\r\nimport {FaMapMarkerAlt, FaUserAlt, FaCalendarAlt, FaClock} from 'react-icons/fa'\r\n\r\n\r\n\r\nexport const EventCard = ({ name, location, speaker, type, start, end }) => {\r\n  const formattedDataStart=formattedData(start)\r\n  const duration = durationTime(start, end)\r\n  \r\nreturn (\r\n    <div className={css.event}>\r\n    <h2 className={css.title}>{name}</h2>\r\n  <p className={css.info}>\r\n    <FaMapMarkerAlt className={css.icon}/>\r\n    {location}\r\n  </p>\r\n  <p className={css.info}>\r\n    <FaUserAlt className={css.icon}/>\r\n    {speaker}\r\n  </p>\r\n  <p className={css.info}>\r\n    <FaCalendarAlt className={css.icon}/>\r\n    {formattedDataStart}\r\n  </p>\r\n  <p className={css.info}>\r\n    <FaClock className={css.icon}/>\r\n    {duration}\r\n  </p>\r\n  <span className={`${css.chip} ${css[type]}`}>{type}</span>\r\n</div>\r\n)\r\n}\r\n\r\nEventCard.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  speaker: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  start: PropTypes.string.isRequired,\r\n  end:PropTypes.string.isRequired,\r\n}","import { format } from 'date-fns' \r\n\r\nexport const formattedData = start => {\r\n  return format(Date.parse(start), 'dd MMMM yyyy, HH:mm')\r\n}","import { formatDistanceStrict } from 'date-fns'\r\n\r\nexport const durationTime = (start, end) => {\r\n  return formatDistanceStrict(new Date(start), new Date(end))\r\n}","import css from './EventBoard.module.css'\r\nimport PropTypes from 'prop-types'\r\nimport { EventCard } from 'components/EventCard/EventCard'\r\n\r\nexport const EventBord = ({events}) => {\r\n  return (\r\n    <div className={css.eventBoard}>\r\n      {events.map(({ name, location, speaker, type, time }) => (\r\n        <EventCard\r\n          key={name}\r\n          name={name}\r\n          location={location}\r\n          speaker={speaker}\r\n          type={type}\r\n          start={time.start}\r\n          end={time.end}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nEventBord.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  speaker: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  time:PropTypes.exact({\r\n    start: PropTypes.string.isRequired,\r\n    end:PropTypes.string.isRequired,\r\n  }),\r\n}","import { PageTitle } from 'components/PageTitle/PageTitle'\r\nimport { EventBord } from './EventBoard/EventBoard'\r\nimport  upcomingEvents  from '../upcoming-events.json'\r\n\r\nexport const App = () => (\r\n  <>\r\n    <PageTitle text=\"24th Core Worlds Coalition Conference\" />\r\n    <EventBord events={upcomingEvents}/>\r\n    </>\r\n  )\r\n","// npm\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}