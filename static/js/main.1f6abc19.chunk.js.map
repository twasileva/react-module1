{"version":3,"sources":["components/PageTitle/PageTitle.styled.jsx","components/PageTitle/PageTitle.jsx","components/EventCard/EventCard.styled.jsx","components/EventCard/EventCard.jsx","utils/formattedData.jsx","utils/durationTime.jsx","components/EventBoard/EventBord.styled.jsx","components/EventBoard/EventBoard.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js","constants/theme.js"],"names":["Title","styled","h1","PageTitle","text","Card","div","props","theme","colors","black","spacing","CardName","h2","Info","p","primaryText","secondaryText","Chip","span","white","eventType","green","blue","red","EventCard","name","location","speaker","type","start","end","formattedDataStart","format","Date","parse","formattedData","duration","formatDistanceStrict","durationTime","Board","EventBord","events","map","time","Container","App","upcomingEvents","ReactDOM","render","StrictMode","value","document","getElementById"],"mappings":"2kDAEaA,EAAQC,IAAOC,GAAV,iG,OCELC,EAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OACvB,cAACJ,EAAD,UAAQI,K,wBCFGC,EAAOJ,IAAOK,IAAV,yGAEL,SAAAC,GAAK,2BAAiBA,EAAMC,MAAMC,OAAOC,UACxC,SAAAH,GAAK,OAAGA,EAAMC,MAAMG,QAAQ,MAG5BC,EAAWX,IAAOY,GAAV,qKAQRC,EAAOb,IAAOc,EAAV,4RAKN,SAAAR,GAAK,OAAGA,EAAMC,MAAMC,OAAOO,eAS3B,SAAAT,GAAK,OAAGA,EAAMC,MAAMC,OAAOQ,iBAGzBC,EAAOjB,IAAOkB,KAAV,qMAON,SAAAZ,GAAK,OAAGA,EAAMC,MAAMC,OAAOW,SAEhB,YAAyB,IAAvBC,EAAsB,EAAtBA,UAAWb,EAAW,EAAXA,MAE/B,OAAQa,GACN,IAAK,OACH,OAAOb,EAAMC,OAAOa,MACtB,IAAK,OACH,OAAOd,EAAMC,OAAOc,KACtB,IAAK,MACH,OAAOf,EAAMC,OAAOe,IACtB,QACE,OAAOhB,EAAMC,OAAOC,UC7Cfe,EAAY,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC1DC,ECPqB,SAAAF,GAC3B,OAAOG,YAAOC,KAAKC,MAAML,GAAQ,uBDMRM,CAAcN,GACjCO,EERoB,SAACP,EAAOC,GAClC,OAAOO,YAAqB,IAAIJ,KAAKJ,GAAQ,IAAII,KAAKH,IFOrCQ,CAAaT,EAAOC,GAEvC,OACI,eAAC1B,EAAD,WACA,cAACO,EAAD,UAAWc,IACb,eAACZ,EAAD,WACE,cAAC,IAAD,IACCa,KAEH,eAACb,EAAD,WACE,cAAC,IAAD,IACCc,KAEH,eAACd,EAAD,WACE,cAAC,IAAD,IACCkB,KAEH,eAAClB,EAAD,WACE,cAAC,IAAD,IACCuB,KAEH,cAACnB,EAAD,CAAMG,UAAWQ,EAAjB,SAAwBA,QG7BbW,EAAQvC,IAAOK,IAAV,2KCELmC,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1B,OACE,cAACF,EAAD,UACGE,EAAOC,KAAI,gBAAGjB,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,KAAMe,EAAlC,EAAkCA,KAAlC,OAEV,cAAC,EAAD,CAEElB,KAAMA,EACNC,SAAUA,EACVC,QAASA,EACTC,KAAMA,EACNC,MAAOc,EAAKd,MACZC,IAAKa,EAAKb,KANLL,S,QCRFmB,EAAY5C,IAAOK,IAAV,4CCITwC,EAAM,kBACjB,eAACD,EAAD,WACE,cAAC,EAAD,CAAWzC,KAAK,0CAChB,cAAC,EAAD,CAAWsC,OAAQK,QCDvBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAe1C,MCVE,CACnBC,OAAQ,CACNW,MAAO,UACPV,MAAO,UACPY,MAAO,UACPE,IAAK,UACLD,KAAM,UACNP,YAAa,UACbC,cAAe,WAGjBN,QAAS,SAAAwC,GAAK,gBAAO,EAAIA,EAAX,QDDZ,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.1f6abc19.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\nexport const Title = styled.h1`\r\nmargin-top: 0;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n`","import PropTypes from 'prop-types'\r\nimport { Title } from './PageTitle.styled'\r\n\r\n\r\nexport const PageTitle = ({text}) => (\r\n  <Title>{text}</Title>\r\n)\r\n\r\nPageTitle.propTypes = {\r\n  text:PropTypes.string.isRequired,\r\n}","import styled from '@emotion/styled'\r\n\r\n\r\nexport const Card = styled.div`\r\nposition: relative;\r\n  border: ${props=> `2px dashed ${props.theme.colors.black}`};\r\n  padding: ${props=> props.theme.spacing(2)};\r\n  border-radius: 4px;\r\n`\r\nexport const CardName = styled.h2`\r\nmargin-top: 0;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  font-weight: 700;\r\n  letter-spacing: 0.5px;\r\n  text-transform: uppercase;\r\n  `\r\nexport const Info = styled.p`\r\ndisplay: flex;\r\n  align-items: center;\r\n  margin-top: 0;\r\n  margin-bottom: 8px;\r\n  color: ${props=> props.theme.colors.primaryText};\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  font-weight: 400;\r\n  letter-spacing: 0.25px;  \r\n\r\n\r\n  svg {display: block;\r\n  margin-right: 8px;\r\n  color: ${props=> props.theme.colors.secondaryText};\r\n}\r\n`\r\nexport const Chip = styled.span`\r\nposition: absolute;\r\n  top: 4px;\r\n  right: 4px;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  text-transform: uppercase;\r\n  color: ${props=> props.theme.colors.white};\r\n\r\n  background-color: ${({eventType, theme}) => {\r\n  \r\n    switch (eventType) {\r\n      case 'free':\r\n        return theme.colors.green;\r\n      case 'paid':\r\n        return theme.colors.blue;\r\n      case 'vip':\r\n        return theme.colors.red;\r\n      default:\r\n        return theme.colors.black;\r\n    }\r\n  }};\r\n}\r\n`\r\n","import PropTypes from 'prop-types'\r\nimport { formattedData } from 'utils/formattedData'\r\nimport { durationTime } from 'utils/durationTime'\r\nimport { FaMapMarkerAlt, FaUserAlt, FaCalendarAlt, FaClock } from 'react-icons/fa'\r\nimport {Card, CardName, Info,Chip} from './EventCard.styled'\r\n\r\n\r\n\r\nexport const EventCard = ({ name, location, speaker, type, start, end }) => {\r\n  const formattedDataStart=formattedData(start)\r\n  const duration = durationTime(start, end)\r\n  \r\nreturn (\r\n    <Card>\r\n    <CardName>{name}</CardName>\r\n  <Info>\r\n    <FaMapMarkerAlt/>\r\n    {location}\r\n  </Info>\r\n  <Info>\r\n    <FaUserAlt/>\r\n    {speaker}\r\n  </Info>\r\n  <Info>\r\n    <FaCalendarAlt/>\r\n    {formattedDataStart}\r\n  </Info>\r\n  <Info>\r\n    <FaClock/>\r\n    {duration}\r\n  </Info>\r\n  <Chip eventType={type}>{type}</Chip>\r\n</Card>\r\n)\r\n}\r\n\r\n// className={`${css.chip} ${css[type]}`\r\n\r\nEventCard.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  speaker: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  start: PropTypes.string.isRequired,\r\n  end:PropTypes.string.isRequired,\r\n}","import { format } from 'date-fns' \r\n\r\nexport const formattedData = start => {\r\n  return format(Date.parse(start), 'dd MMMM yyyy, HH:mm')\r\n}","import { formatDistanceStrict } from 'date-fns'\r\n\r\nexport const durationTime = (start, end) => {\r\n  return formatDistanceStrict(new Date(start), new Date(end))\r\n}","import styled from '@emotion/styled'\r\n\r\nexport const Board = styled.div`\r\n display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(240px, auto));\r\n  gap: 24px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n`","import PropTypes from 'prop-types'\r\nimport { EventCard } from 'components/EventCard/EventCard'\r\nimport {Board} from './EventBord.styled'\r\n\r\nexport const EventBord = ({ events }) => {\r\n  return (\r\n    <Board>\r\n      {events.map(({ name, location, speaker, type, time }) => (\r\n      \r\n        <EventCard\r\n          key={name}\r\n          name={name}\r\n          location={location}\r\n          speaker={speaker}\r\n          type={type}\r\n          start={time.start}\r\n          end={time.end}\r\n        />\r\n      ))}\r\n    </Board>\r\n  )\r\n}\r\n\r\nEventBord.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  speaker: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  time:PropTypes.exact({\r\n    start: PropTypes.string.isRequired,\r\n    end:PropTypes.string.isRequired,\r\n  }),\r\n}","import styled from '@emotion/styled'\r\n\r\nexport const Container = styled.div`\r\npadding: 24px;\r\n`","import { PageTitle } from 'components/PageTitle/PageTitle'\r\nimport { EventBord } from '../EventBoard/EventBoard'\r\nimport upcomingEvents from '../../upcoming-events.json'\r\nimport { Container } from './App.styled'\r\n\r\n\r\nexport const App = () => (\r\n  <Container>\r\n    <PageTitle text=\"24th Core Worlds Coalition Conference\" />\r\n    <EventBord events={upcomingEvents}/>\r\n    </Container>\r\n  )\r\n","// npm\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@emotion/react';\nimport './index.css';\nimport { App } from 'components/App/App';\nimport { theme } from './constants/theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","export const theme = {\n  colors: {\n    white: '#ffffff',\n    black: '#010101',\n    green: '#4caf50',\n    red: '#f44336',\n    blue: '#2196f3',\n    primaryText: '#212121',\n    secondaryText: '#757575',\n  },\n\n  spacing: value => `${4 * value}px`,\n};\n"],"sourceRoot":""}